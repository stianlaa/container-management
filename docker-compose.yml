version: "3.9"

services:
  # Currently manager-api doesn't function properly within a container, but it should be possible:
  # https://stackoverflow.com/questions/36185035/how-to-mount-docker-socket-as-volume-in-docker-container-with-correct-group
  # Another question is should the manager-api itself be within a container? This might cause chicken-and-egg issues
  # manager-api:
  #   container_name: manager-api-container
  #   image: stianlaa/dev-docker-repo:manager-tag
  #   build:
  #     context: .
  #     dockerfile: managnetworker-api/Dockerfile
  #   entrypoint: [ "./run-service" ]
  #   ports:
  #     - "8000:8000"

  arg-poc:
    container_name: arg-poc
    image: stianlaa/dev-docker-repo:arg-poc_${NU_VER}
    build:
      context: .
      dockerfile: arg-poc/Dockerfile
    # Example of how container parameters can be defined here
    entrypoint: [ "./run-service",
                  "test1", "value1",
                  "test2", "value2"
    ]

  network-poc:
    container_name: network-poc
    image: stianlaa/dev-docker-repo:network-poc_${NU_VER}
    build:
      context: .
      dockerfile: network-poc/Dockerfile
    # Example of how start dependency can be added
    depends_on:
      - arg-poc
    entrypoint: [ "./run-service" ]
    ports:
      - "8000:8000"

  volume-poc:
    container_name: volume-poc
    image: stianlaa/dev-docker-repo:volume-poc_${NU_VER}
    build:
      context: .
      dockerfile: volume-poc/Dockerfile
    entrypoint: [ "./run-service" ]

  panic-poc:
    container_name: panic-poc
    image: stianlaa/dev-docker-repo:panic-poc_${NU_VER}
    build:
      context: .
      dockerfile: panic-poc/Dockerfile
    entrypoint: [ "./run-service" ]
    # Various restart configurations available
    restart: on-failure
    # restart: no
